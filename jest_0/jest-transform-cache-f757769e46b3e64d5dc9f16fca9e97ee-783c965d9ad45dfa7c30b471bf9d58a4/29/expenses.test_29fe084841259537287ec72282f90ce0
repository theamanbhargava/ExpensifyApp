'use strict';var _extends = Object.assign || function (target) {for (var i = 1; i < arguments.length; i++) {var source = arguments[i];for (var key in source) {if (Object.prototype.hasOwnProperty.call(source, key)) {target[key] = source[key];}}}return target;};var _expenses = require('../../actions/expenses');

test('should setup remove expense', function () {
    var action = (0, _expenses.removeExpense)({ id: '123abc' });
    expect(action).toEqual({
        type: 'REMOVE_EXPENSE',
        id: '123abc' });

});

test('should setup edit expense', function () {
    var action = (0, _expenses.editExpense)('123abc', { note: 'new note value' });
    expect(action).toEqual({
        type: 'EDIT_EXPENSE',
        id: '123abc',
        updates: { note: 'new note value' } });

});

test('should setup add expense', function () {
    var expenseData = {
        description: 'Rent',
        amount: 109500,
        createdAt: 1000,
        note: 'This was last months rent' };

    var action = (0, _expenses.addExpense)(expenseData);
    expect(action).toEqual({
        type: 'ADD_EXPENSE',
        expense: _extends({},
        expenseData) });


});